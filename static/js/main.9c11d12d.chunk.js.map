{"version":3,"sources":["postList.js","components/Comments.js","components/User.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["postList","posts","users","comments","postListArr","Object","toConsumableArray","_loop","i","user","find","id","userId","filter","comment","postId","length","Comments","props","react_default","a","createElement","className","map","name","email","body","User","_props$user","address","href","concat","street","city","Post","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","openComments","bind","assertThisInitialized","setState","prevState","_this$props$post","post","title","commentsShow","components_Comments","type","onClick","components_User","Component","PostList","isLoading","fullPosts","showPosts","inputValue","LoadData","changeInput","submitInput","fetch","response","json","action","target","value","preventDefault","_this$state2","includes","trim","_this$state3","Fragment","onSubmit","onChange","components_Post","key","App","components_PostList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9c11d12d.chunk.js","sourcesContent":["function postList(posts, users, comments) {\n  const postListArr = [...posts];\n\n  for (let i = 0; i < postListArr.length; i += 1) {\n    postListArr[i].user = users.find(\n      user => user.id === postListArr[i].userId\n    );\n    postListArr[i].comments = [...(\n      comments.filter(\n        comment => comment.postId === postListArr[i].id\n      )\n    )];\n  }\n\n  return postListArr;\n}\n\nexport default postList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Comments(props) {\n  const { comments } = props;\n\n  return (\n    <div>\n      <div className=\"comments-start-title\">\n        Comments :\n      </div>\n      {\n        comments.map(\n          comment => (\n            <div className=\"comment\">\n              <div>\n                {\n                  comment.name\n                }\n              </div>\n              <div>\n                {\n                  comment.email\n                }\n              </div>\n              <div>\n                {\n                  comment.body\n                }\n              </div>\n            </div>\n          )\n        )\n      }\n    </div>\n  );\n}\n\nComments.propTypes = {\n  comments: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Comments;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User(props) {\n  const { name, email, address } = props.user;\n\n  return (\n    <div className=\"user\">\n      <div>\n        {name}\n      </div>\n      <div>\n        <a href={`mailto:${email}`}>{email}</a>\n      </div>\n      <div>\n        <div>\n          street:\n          {address.street}\n        </div>\n        <div>\n          city:\n          {address.city}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default User;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Comments from './Comments';\nimport User from './User';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openComments: false,\n    };\n    this.openComments = this.openComments.bind(this);\n  }\n\n  openComments() {\n    this.setState(prevState => ({ openComments: !prevState.openComments }));\n  }\n\n  render() {\n    const {\n      title, body, comments, user,\n    } = this.props.post;\n    const { openComments } = this.state;\n    let commentsShow = '';\n\n    if (openComments) {\n      commentsShow = <Comments comments={comments} />;\n    } else {\n      commentsShow = (\n        <button type=\"button\" onClick={this.openComments}>\n          Comments load\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__title\">\n          {\n            title\n          }\n        </div>\n        <div className=\"post__body\">\n          {\n            body\n          }\n        </div>\n        <User user={user} />\n        {\n          commentsShow\n        }\n      </div>\n    );\n  }\n}\n\nPost.propTypes = {\n  post: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Post;\n","import React, { Component } from 'react';\nimport postList from '../postList';\nimport Post from './Post';\n\nclass PostList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: null,\n      users: null,\n      comments: null,\n      isLoading: false,\n      fullPosts: null,\n      showPosts: null,\n      inputValue: '',\n    };\n    this.LoadData = this.LoadData.bind(this);\n    this.changeInput = this.changeInput.bind(this);\n    this.submitInput = this.submitInput.bind(this);\n  }\n\n  async LoadData() {\n    let {\n      posts, users, comments, fullPosts, showPosts,\n    } = this.state;\n    let response;\n\n    this.setState({ isLoading: true });\n    response = await fetch('https://jsonplaceholder.typicode.com/posts');\n    posts = await response.json();\n    response = await fetch('https://jsonplaceholder.typicode.com/users');\n    users = await response.json();\n    response = await fetch('https://jsonplaceholder.typicode.com/comments');\n    comments = await response.json();\n    fullPosts = [...(postList(posts, users, comments))];\n    showPosts = [...fullPosts];\n    this.setState({\n      posts, users, comments, fullPosts, showPosts,\n    });\n  }\n\n  changeInput(action) {\n    const inputValue = action.target.value;\n\n    this.setState({ inputValue });\n  }\n\n  submitInput(action) {\n    action.preventDefault();\n    const { fullPosts, inputValue } = this.state;\n    let { showPosts } = this.state;\n\n    if (inputValue === '') {\n      showPosts = [...fullPosts];\n    } else {\n      showPosts = [...fullPosts.filter(\n        post => post.title.includes(inputValue.trim())\n      )];\n    }\n\n    this.setState({ showPosts });\n  }\n\n  render() {\n    const {\n      posts, users, comments, isLoading, showPosts, inputValue,\n    } = this.state;\n\n    if (posts === null || users === null || comments === null) {\n      if (isLoading) {\n        return (\n          <span>Data is loading ...</span>\n        );\n      }\n\n      return (\n        <button type=\"button\" onClick={this.LoadData}>Load data</button>\n      );\n    }\n\n    return (\n      <>\n        <form onSubmit={this.submitInput}>\n          <input type=\"text\" onChange={this.changeInput} value={inputValue} />\n        </form>\n        {\n          showPosts.map(\n            post => <Post key={post.id} post={post} />\n          )\n        }\n      </>\n    );\n  }\n}\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\n\nfunction App() {\n  return (\n    <PostList />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}